{"version":3,"sources":["components/TodoItem.js","components/TodoList.js","components/TodosFilter.js","TodoApp.js","index.js"],"names":["TodoItem","state","editing","title","props","tempTitle","id","onEditBlurHandler","setState","prev","onEdit","onEditKeyDownHandler","event","keyCode","this","completed","onCheckboxChange","onRemove","className","type","idnumber","onChange","checked","htmlFor","onClick","e","preventDefault","onDoubleClick","value","target","onKeyDown","onBlur","React","Component","TodoList","todos","map","todo","key","TodosFilter","view","onStatusClick","href","TodoApp","getAttribute","filter","onInputSubmit","input","reset","onClearSubmit","status","onCompleteAll","localStorage","todoApp","JSON","parse","prevProps","prevState","setItem","stringify","onSubmit","placeholder","ref","length","undefined","find","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c983d608.chunk.js","sourcesContent":["/* eslint-disable jsx-a11y/click-events-have-key-events */\n/* eslint-disable jsx-a11y/no-noninteractive-element-interactions */\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nexport default class TodoItem extends React.Component {\n  state = {\n    editing: false,\n    title: this.props.title,\n    tempTitle: this.props.title,\n    id: this.props.id,\n  };\n\n  onEditBlurHandler = () => {\n    this.setState(prev => ({\n      editing: false, title: prev.tempTitle,\n    }), () => {\n      this.props.onEdit(this.state.id, this.state.title);\n    });\n  }\n\n  onEditKeyDownHandler = (event) => {\n    if (event.keyCode === 27) {\n      this.setState(prev => ({\n        editing: false, tempTitle: prev.title,\n      }));\n    } else if (event.keyCode === 13) {\n      this.onEditBlurHandler();\n    }\n  }\n\n  render() {\n    const {\n      id,\n      completed,\n      onCheckboxChange,\n      onRemove,\n    } = this.props;\n    const { editing, title, tempTitle } = this.state;\n\n    return (\n      <li\n        className={\n          `${editing ? 'editing' : ''}\n          ${completed && !editing ? 'completed' : ''}`\n        }\n      >\n        <div className=\"view\">\n          <input\n            type=\"checkbox\"\n            className=\"toggle\"\n            id={`todo-${id}`}\n            idnumber={id}\n            onChange={onCheckboxChange}\n            checked={completed}\n          />\n          <label\n            htmlFor={`todo-${id}`}\n            idnumber={id}\n            onClick={e => e.preventDefault()}\n            onDoubleClick={() => {\n              this.setState({ editing: true });\n            }}\n          >\n            {title}\n          </label>\n          <button\n            type=\"button\"\n            className=\"destroy\"\n            idnumber={id}\n            onClick={onRemove}\n          />\n        </div>\n        <input\n          type=\"text\"\n          className=\"edit\"\n          value={tempTitle}\n          onChange={e => this.setState({ tempTitle: e.target.value })}\n          onKeyDown={this.onEditKeyDownHandler}\n          onBlur={this.onEditBlurHandler}\n        />\n      </li>\n    );\n  }\n}\n\nTodoItem.propTypes = {\n  title: PropTypes.string.isRequired,\n  id: PropTypes.number.isRequired,\n  completed: PropTypes.bool.isRequired,\n  onCheckboxChange: PropTypes.func.isRequired,\n  onRemove: PropTypes.func.isRequired,\n  onEdit: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport TodoItem from './TodoItem';\n\nexport default class TodoList extends React.Component {\n  state = {};\n\n  render() {\n    const { todos, onCheckboxChange, onRemove, onEdit } = this.props;\n\n    return (\n      <ul className=\"todo-list\">\n        {todos.map(todo => (\n          <TodoItem\n            title={todo.title}\n            id={todo.id}\n            completed={todo.completed}\n            key={todo.id}\n            onCheckboxChange={onCheckboxChange}\n            onRemove={onRemove}\n            onEdit={onEdit}\n          />\n        ))}\n      </ul>\n    );\n  }\n}\n\nTodoList.propTypes = {\n  todos: PropTypes.arrayOf(PropTypes.object).isRequired,\n  onCheckboxChange: PropTypes.func.isRequired,\n  onRemove: PropTypes.func.isRequired,\n  onEdit: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport default class TodosFilter extends React.Component {\n  state = {};\n\n  render() {\n    const { view, onStatusClick } = this.props;\n\n    return (\n      <ul className=\"filters\">\n        <li>\n          <a\n            href=\"#/\"\n            className={view === 'all' ? 'selected' : ''}\n            onClick={onStatusClick}\n            view=\"all\"\n          >\n            All\n          </a>\n        </li>\n\n        <li>\n          <a\n            href=\"#/active\"\n            className={view === 'active' ? 'selected' : ''}\n            onClick={onStatusClick}\n            view=\"active\"\n          >\n            Active\n          </a>\n        </li>\n\n        <li>\n          <a\n            href=\"#/completed\"\n            className={view === 'completed' ? 'selected' : ''}\n            onClick={onStatusClick}\n            view=\"completed\"\n          >\n            Completed\n          </a>\n        </li>\n      </ul>\n    );\n  }\n}\n\nTodosFilter.propTypes = {\n  view: PropTypes.string.isRequired,\n  onStatusClick: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport TodoList from './components/TodoList';\nimport TodosFilter from './components/TodosFilter';\n\nclass TodoApp extends React.Component {\n  state = {\n    todos: [],\n    id: 0,\n    view: 'all',\n  };\n\n  componentDidMount() {\n    if (localStorage.todoApp) {\n      this.setState({ ...JSON.parse(localStorage.todoApp) });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState !== this.state) {\n      localStorage.setItem('todoApp', JSON.stringify(this.state));\n    }\n  }\n\n  onCheckboxChange = (event) => {\n    const id = event.target.getAttribute('idnumber');\n\n    this.setState(prev => ({ todos: [...prev.todos.map((todo) => {\n      if (todo.id === +id) {\n        return {\n          ...todo, completed: !todo.completed,\n        };\n      }\n\n      return todo;\n    })] }));\n  }\n\n  onRemove = (event) => {\n    const id = event.target.getAttribute('idnumber');\n\n    this.setState(prev => ({\n      todos: [...prev.todos.filter(todo => todo.id !== +id)],\n    }));\n  }\n\n  onInputSubmit = (event) => {\n    event.preventDefault();\n    const { id } = this.state;\n    const title = this.input.value;\n    const completed = false;\n\n    this.setState(prev => ({\n      todos: [...prev.todos, {\n        title,\n        id,\n        completed,\n      }],\n      id: prev.id + 1,\n    }));\n\n    event.target.reset();\n  }\n\n  onClearSubmit = () => {\n    this.setState(prev => ({\n      todos: [...prev.todos.filter(todo => !todo.completed)],\n    }));\n  }\n\n  status = (todo) => {\n    switch (this.state.view) {\n      case 'completed':\n        return todo.completed;\n      case 'active':\n        return !todo.completed;\n      default:\n        return true;\n    }\n  }\n\n  onCompleteAll = (event) => {\n    if (event.target.checked) {\n      this.setState(prev => ({\n        todos: [...prev.todos.map(todo => ({\n          ...todo, completed: true,\n        }))],\n      }));\n    } else {\n      this.setState(prev => ({\n        todos: [...prev.todos.map(todo => ({\n          ...todo, completed: false,\n        }))],\n      }));\n    }\n  }\n\n  onStatusClick = (event) => {\n    const view = event.target.getAttribute('view');\n\n    this.setState({ view });\n  }\n\n  onEdit = (id, title) => {\n    this.setState(prev => ({\n      todos: [...prev.todos.map((todo) => {\n        if (todo.id === id) {\n          return {\n            ...todo, title,\n          };\n        }\n\n        return todo;\n      })],\n    }));\n  }\n\n  render() {\n    const { todos, view } = this.state;\n\n    return (\n      <section className=\"todoapp\">\n        <header className=\"header\">\n          <h1>todos</h1>\n          <form onSubmit={this.onInputSubmit}>\n            <input\n              className=\"new-todo\"\n              placeholder=\"What needs to be done?\"\n              ref={(e) => {\n                this.input = e;\n              }}\n            />\n          </form>\n        </header>\n\n        <section\n          className={todos.length > 0 ? 'main' : 'main hide'}\n        >\n          <input\n            type=\"checkbox\"\n            id=\"toggle-all\"\n            className=\"toggle-all\"\n            onChange={this.onCompleteAll}\n          />\n          <label htmlFor=\"toggle-all\">Mark all as complete</label>\n\n          <TodoList\n            todos={todos.filter(this.status)}\n            onCheckboxChange={this.onCheckboxChange}\n            onRemove={this.onRemove}\n            onEdit={this.onEdit}\n          />\n        </section>\n\n        <footer className={todos.length > 0 ? 'footer' : 'footer hide'}>\n          <span className=\"todo-count\">\n            {todos.filter(todo => !todo.completed).length}\n            {' '}\n            items left\n          </span>\n\n          <TodosFilter\n            view={view}\n            onStatusClick={this.onStatusClick}\n          />\n\n          {todos.find(todo => todo.completed) !== undefined ? (\n            <button\n              type=\"button\"\n              className=\"clear-completed\"\n              onClick={this.onClearSubmit}\n            >\n              Clear completed\n            </button>\n          ) : ''}\n\n        </footer>\n      </section>\n    );\n  }\n}\n\nexport default TodoApp;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './base.scss';\nimport './index.scss';\nimport TodoApp from './TodoApp';\n\nReactDOM.render(\n  <TodoApp />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}